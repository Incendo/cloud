[plugins]
versions = { id = "com.github.ben-manes.versions", version = "0.51.0" }
cloud-buildLogic-spotless = { id = "org.incendo.cloud-build-logic.spotless", version.ref = "cloud-build-logic" }
cloud-buildLogic-rootProject-publishing = { id = "org.incendo.cloud-build-logic.publishing.root-project", version.ref = "cloud-build-logic" }
cloud-buildLogic-rootProject-spotless = { id = "org.incendo.cloud-build-logic.spotless.root-project", version.ref = "cloud-build-logic" }

[versions]
checkstyle = "10.12.5"
stylecheck = "0.2.1"
checkerQual = "3.47.0"
errorprone = "2.27.1"
geantyref = "1.3.16"
jmh = "1.37"
apiguardian = "1.1.2"
immutables = "2.10.1"

# integration
guice = "7.0.0"

# kotlin
kotlin = "2.0.20"
dokka = "1.9.20"
coroutines = "1.8.1"
ktlint = "0.50.0"

# testing
jupiterEngine = "5.11.0"
mockitoCore = "4.11.0"
mockitoKotlin = "4.1.0"
mockitoJupiter = "4.11.0"
truth = "1.4.4"
compileTesting = "0.21.0"

# build-logic
cloud-build-logic = "0.0.15"

[libraries]
checkerQual = { group = "org.checkerframework", name = "checker-qual", version.ref = "checkerQual" }
errorproneCore = { group = "com.google.errorprone", name = "error_prone_core", version.ref = "errorprone" }
errorproneAnnotations = { group = "com.google.errorprone", name = "error_prone_annotations", version.ref = "errorprone" }
geantyref = { group = "io.leangen.geantyref", name = "geantyref", version.ref = "geantyref" }
jmhCore = { group = "org.openjdk.jmh", name = "jmh-core", version.ref = "jmh" }
jmhGeneratorAnnprocess = { group = "org.openjdk.jmh", name = "jmh-generator-annprocess", version.ref = "jmh" }
apiguardian = { group = "org.apiguardian", name = "apiguardian-api", version.ref = "apiguardian" }
immutables = { group = "org.immutables", name = "value", version.ref = "immutables" }
immutablesAnnotate = { group = "org.immutables", name = "annotate", version.ref = "immutables" }

# integration
guice = { group = "com.google.inject", name = "guice", version.ref = "guice" }

# kotlin
coroutinesCore = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
coroutinesJdk8 = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-jdk8", version.ref = "coroutines" }

# testing
jupiterEngine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "jupiterEngine" }
jupiterParams = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "jupiterEngine" }
mockitoCore = { group = "org.mockito", name = "mockito-core", version.ref = "mockitoCore" }
mockitoKotlin = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockitoKotlin" }
mockitoJupiter = { group = "org.mockito", name = "mockito-junit-jupiter", version.ref = "mockitoJupiter" }
truth = { group = "com.google.truth", name = "truth", version.ref = "truth" }
compileTesting = { group = "com.google.testing.compile", name = "compile-testing", version.ref = "compileTesting" }

# build-logic
gradleKotlinJvm = { group = "org.jetbrains.kotlin.jvm", name = "org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "kotlin" }
gradleDokka = { group = "org.jetbrains.dokka", name = "dokka-gradle-plugin", version.ref = "dokka" }
stylecheck = { module = "ca.stellardrift:stylecheck", version.ref = "stylecheck" }
cloud-build-logic = { module = "org.incendo:cloud-build-logic", version.ref = "cloud-build-logic" }

[bundles]
coroutines = ["coroutinesCore", "coroutinesJdk8"]
annotations = ["checkerQual", "apiguardian"]
immutables = ["immutables", "immutablesAnnotate"]
baseTestingDependencies = [
    "jupiterEngine",
    "jupiterParams",
    "mockitoCore",
    "mockitoKotlin",
    "mockitoJupiter",
    "truth",
]
